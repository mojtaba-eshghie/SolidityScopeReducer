export interface CompilerVersionSelectionStrategy {
    select(): Iterable<string>;
}
export declare class RangeVersionStrategy implements CompilerVersionSelectionStrategy {
    range: string[];
    constructor(range: string[]);
    select(): Iterable<string>;
}
export declare class LatestVersionInEachSeriesStrategy implements CompilerVersionSelectionStrategy {
    descending: boolean;
    constructor(descending?: boolean);
    select(): Iterable<string>;
}
export declare class LatestAndFirstVersionInEachSeriesStrategy implements CompilerVersionSelectionStrategy {
    descending: boolean;
    constructor(descending?: boolean);
    select(): Iterable<string>;
}
export declare class VersionDetectionStrategy implements CompilerVersionSelectionStrategy {
    sources: string[];
    fallback: CompilerVersionSelectionStrategy;
    descending: boolean;
    constructor(sources: Uint8Array[], fallback: CompilerVersionSelectionStrategy, descending?: boolean);
    select(): Iterable<string>;
}
//# sourceMappingURL=compiler_selection.d.ts.map