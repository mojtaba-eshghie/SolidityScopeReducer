"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntType = void 0;
const type_1 = require("./type");
class IntType extends type_1.TypeNode {
    constructor(nBits, signed, src) {
        super(src);
        this.nBits = nBits;
        this.signed = signed;
    }
    pp() {
        return `${this.signed ? "" : "u"}int${this.nBits}`;
    }
    /// Maximum value (inclusive) representable by this int type.
    max() {
        return 2n ** BigInt(this.signed ? this.nBits - 1 : this.nBits) - 1n;
    }
    /// Minimum value (inclusive) representable by this int type.
    min() {
        return this.signed ? -(2n ** BigInt(this.nBits - 1)) : 0n;
    }
    fits(literal) {
        return literal <= this.max() && literal >= this.min();
    }
}
exports.IntType = IntType;
//# sourceMappingURL=int_type.js.map