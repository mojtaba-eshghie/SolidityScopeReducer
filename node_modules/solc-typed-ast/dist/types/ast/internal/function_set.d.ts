import { Range } from "../../../misc";
import { BuiltinFunctionType } from "../builtin_function";
import { EventType } from "../event_type";
import { FunctionType } from "../function_type";
import { TypeNode } from "../type";
export type FunctionSetType = FunctionLikeSetType<FunctionType | BuiltinFunctionType>;
export declare class FunctionLikeSetType<T extends FunctionType | EventType | BuiltinFunctionType> extends TypeNode {
    readonly defs: T[];
    constructor(funs: T[], src?: Range);
    pp(): string;
    getFields(): any[];
}
//# sourceMappingURL=function_set.d.ts.map