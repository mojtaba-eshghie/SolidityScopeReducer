"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionType = void 0;
const ast_1 = require("../../ast");
const function_like_type_1 = require("./function_like_type");
class FunctionType extends function_like_type_1.FunctionLikeType {
    constructor(name, parameters, returns, visibility, mutability, implicitFirstArg = false, src) {
        super(name, parameters, src);
        this.returns = returns;
        this.visibility = visibility;
        this.mutability = mutability;
        this.implicitFirstArg = implicitFirstArg;
    }
    getChildren() {
        return [...this.parameters, ...this.returns];
    }
    pp() {
        const mapper = (node) => node.pp();
        const argStr = this.parameters.map(mapper).join(",");
        let retStr = this.returns.map(mapper).join(",");
        retStr = retStr !== "" ? ` returns (${retStr})` : retStr;
        const visStr = this.visibility !== ast_1.FunctionVisibility.Internal &&
            this.visibility !== ast_1.FunctionVisibility.Default
            ? ` ` + this.visibility
            : "";
        const mutStr = this.mutability !== "nonpayable" ? " " + this.mutability : "";
        return `function ${this.name !== undefined ? this.name : ""}(${argStr})${mutStr}${visStr}${retStr}`;
    }
}
exports.FunctionType = FunctionType;
//# sourceMappingURL=function_type.js.map