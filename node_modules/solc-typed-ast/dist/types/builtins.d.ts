import { BuiltinFunctionType, BuiltinStructType, TypeNode } from "./ast";
export type VersionDependentType = [TypeNode, string];
/**
 * Type of the type(T) function when T is an int type
 */
export declare const typeInt: BuiltinFunctionType;
/**
 * Type of the type(T) function when T is a contract
 */
export declare const typeContract: BuiltinFunctionType;
/**
 * Type of the type(T) function when T is an interface
 */
export declare const typeInterface: BuiltinFunctionType;
export declare const abi: BuiltinStructType;
export declare const msg: BuiltinStructType;
export declare const block: BuiltinStructType;
export declare const tx: BuiltinStructType;
export declare const addressBuiltins: BuiltinStructType;
export declare const address06Builtins: BuiltinStructType;
export declare const address06PayableBuiltins: BuiltinStructType;
export declare const globalBuiltins: BuiltinStructType;
//# sourceMappingURL=builtins.d.ts.map