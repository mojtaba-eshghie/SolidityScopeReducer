import { TypeNode } from "./ast";
export declare enum ABIEncoderVersion {
    V1 = "ABIEncoderV1",
    V2 = "ABIEncoderV2"
}
export declare const ABIEncoderVersions: Set<string>;
/**
 * Get the canonical name for the `TypeNode` `t`, to be used in
 * function/accessor/error/event signatures
 */
export declare function abiTypeToCanonicalName(t: TypeNode): string;
/**
 * Get the canonical name for the `TypeNode` `t`, to be used in
 * function/accessor/error/event signatures of a _LIBRARY_ function.
 * Apparently library signatures follow different rules, as those are internal.
 */
export declare function abiTypeToLibraryCanonicalName(t: TypeNode): string;
//# sourceMappingURL=abi.d.ts.map