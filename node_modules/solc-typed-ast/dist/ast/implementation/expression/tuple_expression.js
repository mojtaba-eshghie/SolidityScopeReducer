"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TupleExpression = void 0;
const expression_1 = require("./expression");
class TupleExpression extends expression_1.Expression {
    constructor(id, src, typeString, isInlineArray, components, raw) {
        super(id, src, typeString, raw);
        this.isInlineArray = isInlineArray;
        this.vOriginalComponents = components;
        this.acceptChildren();
    }
    get children() {
        return this.vComponents;
    }
    /**
     * An array of referenced node IDs, preserving evaluation order.
     *
     * The `null` value is used to represent empty spots.
     */
    get components() {
        const result = [];
        for (const component of this.vOriginalComponents) {
            result.push(component === null ? null : component.id);
        }
        return result;
    }
    /**
     * An array of non-`null` components
     */
    get vComponents() {
        const result = [];
        for (const component of this.vOriginalComponents) {
            if (component !== null) {
                result.push(component);
            }
        }
        return result;
    }
}
exports.TupleExpression = TupleExpression;
//# sourceMappingURL=tuple_expression.js.map