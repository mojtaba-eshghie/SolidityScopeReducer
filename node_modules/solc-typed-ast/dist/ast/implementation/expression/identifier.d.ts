import { ASTNode } from "../../ast_node";
import { ExternalReferenceType } from "../../constants";
import { PrimaryExpression } from "./primary_expression";
export declare class Identifier extends PrimaryExpression {
    /**
     * Name of the identifier
     */
    name: string;
    /**
     * Id of the referenced declaration
     */
    referencedDeclaration: number;
    constructor(id: number, src: string, typeString: string, name: string, referencedDeclaration: number, raw?: any);
    /**
     * Attribute to access the converted referenced declaration.
     *
     * Is `undefined` when this is a Solidity internal identifier.
     */
    get vReferencedDeclaration(): ASTNode | undefined;
    set vReferencedDeclaration(value: ASTNode | undefined);
    /**
     * Solidity builtin or user-defined reference
     */
    get vIdentifierType(): ExternalReferenceType;
}
//# sourceMappingURL=identifier.d.ts.map