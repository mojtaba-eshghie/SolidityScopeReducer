import { ASTNode } from "../../ast_node";
import { Expression } from "./expression";
export declare class MemberAccess extends Expression {
    /**
     * The name of the member, e.g. `push` in `someArray.push(1)`
     */
    memberName: string;
    /**
     * Id of the referenced declaration
     */
    referencedDeclaration: number;
    /**
     * The expression that is accessed e.g. `someArray` in `someArray.push(1)`
     */
    vExpression: Expression;
    constructor(id: number, src: string, typeString: string, expression: Expression, memberName: string, referencedDeclaration: number, raw?: any);
    get children(): readonly ASTNode[];
    /**
     * Reference to the declaration
     */
    get vReferencedDeclaration(): ASTNode | undefined;
    set vReferencedDeclaration(value: ASTNode | undefined);
}
//# sourceMappingURL=member_access.d.ts.map