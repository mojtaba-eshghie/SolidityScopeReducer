"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentifierPath = void 0;
const ast_node_1 = require("../../ast_node");
class IdentifierPath extends ast_node_1.ASTNode {
    constructor(id, src, name, referencedDeclaration, raw) {
        super(id, src, raw);
        this.name = name;
        this.referencedDeclaration = referencedDeclaration;
    }
    /**
     * Attribute to access the converted referenced declaration.
     *
     * Is `undefined` when this is a Solidity internal identifier.
     */
    get vReferencedDeclaration() {
        return this.requiredContext.locate(this.referencedDeclaration);
    }
    set vReferencedDeclaration(value) {
        if (value === undefined) {
            this.referencedDeclaration = -1;
        }
        else {
            if (!this.requiredContext.contains(value)) {
                throw new Error(`Node ${value.type}#${value.id} not belongs to a current context`);
            }
            this.referencedDeclaration = value.id;
        }
    }
}
exports.IdentifierPath = IdentifierPath;
//# sourceMappingURL=identifier_path.js.map