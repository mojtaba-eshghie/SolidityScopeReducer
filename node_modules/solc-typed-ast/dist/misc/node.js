"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Node = void 0;
const utils_1 = require("./utils");
let nNodes = 0;
/**
 * Generic tree node with pretty-printer, optional source tripple information
 * and structural equality comparison. Useful for building ASTs.
 */
class Node {
    constructor(src) {
        this.id = nNodes++;
        this.src = src;
    }
    getChildren() {
        return this.getFields().filter((field) => field instanceof Node);
    }
    walk(cb) {
        cb(this);
        for (const child of this.getChildren()) {
            child.walk(cb);
        }
    }
    get requiredSrc() {
        (0, utils_1.assert)(this.src !== undefined, `Missing source information for node ${this.pp()}`);
        return this.src;
    }
    getSourceFragment(src) {
        const rng = this.requiredSrc;
        return src.slice(rng.start.offset, rng.end.offset);
    }
}
exports.Node = Node;
//# sourceMappingURL=node.js.map