import { ASTContext, ASTNode } from "../ast";
export interface PPAble {
    pp(): string;
}
export type PPIsh = PPAble | ASTNode | ASTContext | string | number | boolean | bigint | null | undefined | PPIsh[] | Set<PPIsh> | Map<PPIsh, PPIsh> | Iterable<PPIsh>;
export declare function isPPAble(value: any): value is PPAble;
export declare function pp(value: PPIsh): string;
export declare function ppArr(array: PPIsh[], separator?: string, start?: string, end?: string): string;
export declare function ppIter(iter: Iterable<PPIsh>, separator?: string, start?: string, end?: string): string;
export declare function ppSet(set: Set<PPIsh>, separator?: string, start?: string, end?: string): string;
export declare function ppMap(map: Map<PPIsh, PPIsh>, separator?: string, keyValueSeparator?: string, start?: string, end?: string): string;
export declare function fmt(message: string, ...details: PPIsh[]): string;
//# sourceMappingURL=pretty_printing.d.ts.map